/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Course, CourseInterface } from "../Course";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkelProof",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "courseCID",
        type: "string",
      },
    ],
    name: "Graduate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getCourseCID",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "_cid",
        type: "string",
      },
    ],
    name: "graduate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "graduations",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_courseCID",
        type: "string",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "isCertified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c50806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100e7578063c926602914610102578063ef02330014610115578063f2fde38b1461012857600080fd5b80631ece87361461008d578063715018a6146100b55780637ab4339d146100bf5780638d8637d7146100d2575b600080fd5b6100a061009b36600461093e565b61013b565b60405190151581526020015b60405180910390f35b6100bd6101be565b005b6100bd6100cd366004610a80565b610224565b6100da610313565b6040516100ac9190610b1b565b6033546040516001600160a01b0390911681526020016100ac565b6100bd610110366004610b35565b6103a5565b6100da610123366004610b7c565b61045c565b6100bd610136366004610b95565b6104f6565b6000818152606660205260408120805482919061015790610bb0565b9050116101ab5760405162461bcd60e51b815260206004820152600e60248201527f526f6f74206e6f7420666f756e6400000000000000000000000000000000000060448201526064015b60405180910390fd5b6101b68483856105d8565b949350505050565b6033546001600160a01b031633146102185760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101a2565b61022260006105ee565b565b600054610100900460ff1661023f5760005460ff1615610243565b303b155b6102b55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016101a2565b600054610100900460ff161580156102d7576000805461ffff19166101011790555b82516102ea90606590602086019061085e565b506102f3610658565b6102fc826104f6565b801561030e576000805461ff00191690555b505050565b60606065805461032290610bb0565b80601f016020809104026020016040519081016040528092919081815260200182805461034e90610bb0565b801561039b5780601f106103705761010080835404028352916020019161039b565b820191906000526020600020905b81548152906001019060200180831161037e57829003601f168201915b5050505050905090565b6033546001600160a01b031633146103ff5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101a2565b6000828152606660209081526040909120825161041e9284019061085e565b507fae89b4db598fa98bf543752d875a8cd4b01adc0b551673cf5d4ff6618f08411d8282604051610450929190610beb565b60405180910390a15050565b6066602052600090815260409020805461047590610bb0565b80601f01602080910402602001604051908101604052809291908181526020018280546104a190610bb0565b80156104ee5780601f106104c3576101008083540402835291602001916104ee565b820191906000526020600020905b8154815290600101906020018083116104d157829003601f168201915b505050505081565b6033546001600160a01b031633146105505760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101a2565b6001600160a01b0381166105cc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016101a2565b6105d5816105ee565b50565b6000826105e585846106d3565b14949350505050565b603380546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166106c35760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016101a2565b6106cb61077f565b6102226107ea565b600081815b84518110156107775760008582815181106106f5576106f5610c04565b60200260200101519050808311610737576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250610764565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b508061076f81610c1a565b9150506106d8565b509392505050565b600054610100900460ff166102225760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016101a2565b600054610100900460ff166108555760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016101a2565b610222336105ee565b82805461086a90610bb0565b90600052602060002090601f01602090048101928261088c57600085556108d2565b82601f106108a557805160ff19168380011785556108d2565b828001600101855582156108d2579182015b828111156108d25782518255916020019190600101906108b7565b506108de9291506108e2565b5090565b5b808211156108de57600081556001016108e3565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610936576109366108f7565b604052919050565b60008060006060848603121561095357600080fd5b833567ffffffffffffffff8082111561096b57600080fd5b818601915086601f83011261097f57600080fd5b8135602082821115610993576109936108f7565b8160051b92506109a481840161090d565b828152928401810192818101908a8511156109be57600080fd5b948201945b848610156109dc578535825294820194908201906109c3565b9a918901359950506040909701359695505050505050565b600082601f830112610a0557600080fd5b813567ffffffffffffffff811115610a1f57610a1f6108f7565b610a32601f8201601f191660200161090d565b818152846020838601011115610a4757600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160a01b0381168114610a7b57600080fd5b919050565b60008060408385031215610a9357600080fd5b823567ffffffffffffffff811115610aaa57600080fd5b610ab6858286016109f4565b925050610ac560208401610a64565b90509250929050565b6000815180845260005b81811015610af457602081850181015186830182015201610ad8565b81811115610b06576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610b2e6020830184610ace565b9392505050565b60008060408385031215610b4857600080fd5b82359150602083013567ffffffffffffffff811115610b6657600080fd5b610b72858286016109f4565b9150509250929050565b600060208284031215610b8e57600080fd5b5035919050565b600060208284031215610ba757600080fd5b610b2e82610a64565b600181811c90821680610bc457607f821691505b60208210811415610be557634e487b7160e01b600052602260045260246000fd5b50919050565b8281526040602082015260006101b66040830184610ace565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610c3c57634e487b7160e01b600052601160045260246000fd5b506001019056fea164736f6c6343000809000a";

type CourseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CourseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Course__factory extends ContractFactory {
  constructor(...args: CourseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Course> {
    return super.deploy(overrides || {}) as Promise<Course>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Course {
    return super.attach(address) as Course;
  }
  connect(signer: Signer): Course__factory {
    return super.connect(signer) as Course__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CourseInterface {
    return new utils.Interface(_abi) as CourseInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Course {
    return new Contract(address, _abi, signerOrProvider) as Course;
  }
}
