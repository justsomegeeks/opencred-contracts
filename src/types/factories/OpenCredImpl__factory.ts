/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OpenCredImpl, OpenCredImplInterface } from "../OpenCredImpl";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bootcamp",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "courseId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "courseURI",
        type: "string",
      },
    ],
    name: "CourseCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bootcamp",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "courseId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleProof",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "graduatesURI",
        type: "string",
      },
    ],
    name: "Graduate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bootcamp",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reviewer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "courseId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reviewURI",
        type: "string",
      },
    ],
    name: "Review",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "courseURI",
        type: "string",
      },
    ],
    name: "addCourse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bootcampURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "courseCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "graduatesURI",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "courseId",
        type: "uint256",
      },
    ],
    name: "graduate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "graduations",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_bootcampURI",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "courseId",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "isCertified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "courseId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reviewURI",
        type: "string",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "review",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610e1b8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80638da5cb5b11610081578063f2fde38b1161005b578063f2fde38b1461019f578063f399e22e146101b2578063ff62b684146101c557600080fd5b80638da5cb5b14610133578063ce7be1121461014e578063eab571961461016157600080fd5b806366055159116100b25780636605515914610101578063715018a6146101185780637fa142a31461012057600080fd5b80632e554076146100ce57806349d5f2ae146100e3575b600080fd5b6100e16100dc366004610aba565b6101d8565b005b6100eb61027f565b6040516100f89190610d3a565b60405180910390f35b61010a60035481565b6040519081526020016100f8565b6100e161030d565b6100e161012e366004610af7565b610373565b6000546040516001600160a01b0390911681526020016100f8565b6100e161015c366004610c2e565b610434565b61018f61016f366004610c0c565b600260209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100f8565b6100e16101ad366004610a4a565b61054b565b6100e16101c0366004610a6c565b61062d565b61018f6101d3366004610b45565b61077e565b6000546001600160a01b031633146102375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600380546001019081905560405130907fdfff37b93a59c1210da07fb62043e90ad88a7c2d1d12d53f1632950dfbbcf5b790610274908590610d3a565b60405180910390a350565b6001805461028c90610d7e565b80601f01602080910402602001604051908101604052809291908181526020018280546102b890610d7e565b80156103055780601f106102da57610100808354040283529160200191610305565b820191906000526020600020905b8154815290600101906020018083116102e857829003601f168201915b505050505081565b6000546001600160a01b031633146103675760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161022e565b61037160006107fb565b565b6000546001600160a01b031633146103cd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161022e565b600081815260026020908152604080832085845290915290819020805460ff1916600117905551819030907fe8ccf14e0e5d0933c4a730f93f14ee872a8746633ce826da79b002094ce8c764906104279086908890610d21565b60405180910390a3505050565b6104ac85848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506040516bffffffffffffffffffffffff193360601b16602082015260340191506104909050565b604051602081830303815290604052805190602001208461077e565b6104f85760405162461bcd60e51b815260206004820152600d60248201527f4e6f742043657274696669656400000000000000000000000000000000000000604482015260640161022e565b84336001600160a01b0316306001600160a01b03167f5c4927d79937b7844372a304fd29a2f456d2b431617986af59cc930c7e3c7e358760405161053c9190610d3a565b60405180910390a45050505050565b6000546001600160a01b031633146105a55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161022e565b6001600160a01b0381166106215760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161022e565b61062a816107fb565b50565b600054600160a81b900460ff166106625760005474010000000000000000000000000000000000000000900460ff1615610666565b303b155b6106d85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161022e565b600054600160a81b900460ff1615801561072d57600080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff1675010100000000000000000000000000000000000000001790555b8151610740906001906020850190610925565b5061074a836107fb565b801561077957600080547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff1690555b505050565b600084815260026020908152604080832084845290915281205460ff166107e75760405162461bcd60e51b815260206004820152600e60248201527f526f6f74206e6f7420666f756e64000000000000000000000000000000000000604482015260640161022e565b6107f2848385610863565b95945050505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000826108708584610879565b14949350505050565b600081815b845181101561091d57600085828151811061089b5761089b610de2565b602002602001015190508083116108dd57604080516020810185905290810182905260600160405160208183030381529060405280519060200120925061090a565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b508061091581610db9565b91505061087e565b509392505050565b82805461093190610d7e565b90600052602060002090601f0160209004810192826109535760008555610999565b82601f1061096c57805160ff1916838001178555610999565b82800160010185558215610999579182015b8281111561099957825182559160200191906001019061097e565b506109a59291506109a9565b5090565b5b808211156109a557600081556001016109aa565b80356001600160a01b03811681146109d557600080fd5b919050565b600082601f8301126109eb57600080fd5b813567ffffffffffffffff811115610a0557610a05610df8565b610a18601f8201601f1916602001610d4d565b818152846020838601011115610a2d57600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610a5c57600080fd5b610a65826109be565b9392505050565b60008060408385031215610a7f57600080fd5b610a88836109be565b9150602083013567ffffffffffffffff811115610aa457600080fd5b610ab0858286016109da565b9150509250929050565b600060208284031215610acc57600080fd5b813567ffffffffffffffff811115610ae357600080fd5b610aef848285016109da565b949350505050565b600080600060608486031215610b0c57600080fd5b833567ffffffffffffffff811115610b2357600080fd5b610b2f868287016109da565b9660208601359650604090950135949350505050565b60008060008060808587031215610b5b57600080fd5b8435935060208086013567ffffffffffffffff80821115610b7b57600080fd5b818801915088601f830112610b8f57600080fd5b813581811115610ba157610ba1610df8565b8060051b9150610bb2848301610d4d565b8181528481019084860184860187018d1015610bcd57600080fd5b600095505b83861015610bf0578035835260019590950194918601918601610bd2565b50989b989a505050506040870135966060013595945050505050565b60008060408385031215610c1f57600080fd5b50508035926020909101359150565b600080600080600060808688031215610c4657600080fd5b85359450602086013567ffffffffffffffff80821115610c6557600080fd5b610c7189838a016109da565b95506040880135915080821115610c8757600080fd5b818801915088601f830112610c9b57600080fd5b813581811115610caa57600080fd5b8960208260051b8501011115610cbf57600080fd5b96999598505060200195606001359392505050565b6000815180845260005b81811015610cfa57602081850181015186830182015201610cde565b81811115610d0c576000602083870101525b50601f01601f19169290920160200192915050565b828152604060208201526000610aef6040830184610cd4565b602081526000610a656020830184610cd4565b604051601f8201601f1916810167ffffffffffffffff81118282101715610d7657610d76610df8565b604052919050565b600181811c90821680610d9257607f821691505b60208210811415610db357634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610ddb57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea164736f6c6343000807000a";

type OpenCredImplConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OpenCredImplConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OpenCredImpl__factory extends ContractFactory {
  constructor(...args: OpenCredImplConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OpenCredImpl> {
    return super.deploy(overrides || {}) as Promise<OpenCredImpl>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OpenCredImpl {
    return super.attach(address) as OpenCredImpl;
  }
  connect(signer: Signer): OpenCredImpl__factory {
    return super.connect(signer) as OpenCredImpl__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OpenCredImplInterface {
    return new utils.Interface(_abi) as OpenCredImplInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OpenCredImpl {
    return new Contract(address, _abi, signerOrProvider) as OpenCredImpl;
  }
}
