/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OpenCredImpl, OpenCredImplInterface } from "../OpenCredImpl";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "courseId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "courseURI",
        type: "string",
      },
    ],
    name: "CourseCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "courseId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "graduatesURI",
        type: "string",
      },
    ],
    name: "Graduate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "reviewer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "courseId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reviewURI",
        type: "string",
      },
    ],
    name: "Review",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "courseURI",
        type: "string",
      },
    ],
    name: "addCourse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bootcampURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "courseCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "graduatesURI",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "courseId",
        type: "uint256",
      },
    ],
    name: "graduate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "graduations",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_bootcampURI",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "courseId",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "isCertified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "courseId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reviewURI",
        type: "string",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "review",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610e0d8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80638da5cb5b11610081578063f2fde38b1161005b578063f2fde38b1461019f578063f399e22e146101b2578063ff62b684146101c557600080fd5b80638da5cb5b14610133578063ce7be1121461014e578063eab571961461016157600080fd5b806366055159116100b25780636605515914610101578063715018a6146101185780637fa142a31461012057600080fd5b80632e554076146100ce57806349d5f2ae146100e3575b600080fd5b6100e16100dc366004610aac565b6101d8565b005b6100eb61027d565b6040516100f89190610d2c565b60405180910390f35b61010a60035481565b6040519081526020016100f8565b6100e161030b565b6100e161012e366004610ae9565b610371565b6000546040516001600160a01b0390911681526020016100f8565b6100e161015c366004610c20565b610430565b61018f61016f366004610bfe565b600260209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100f8565b6100e16101ad366004610a3c565b61053d565b6100e16101c0366004610a5e565b61061f565b61018f6101d3366004610b37565b610770565b6000546001600160a01b031633146102375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60038054600101908190556040517fc2c844c5f6c72fe99b99de0942ba619e99957d3e8f7e614263ecfe40de952e5890610272908490610d2c565b60405180910390a250565b6001805461028a90610d70565b80601f01602080910402602001604051908101604052809291908181526020018280546102b690610d70565b80156103035780601f106102d857610100808354040283529160200191610303565b820191906000526020600020905b8154815290600101906020018083116102e657829003601f168201915b505050505081565b6000546001600160a01b031633146103655760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161022e565b61036f60006107ed565b565b6000546001600160a01b031633146103cb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161022e565b600081815260026020908152604080832085845290915290819020805460ff191660011790555181907fc72580170f3ff1c43b3cdc40a05383dab389841af2555d21950151fecb83b626906104239085908790610d13565b60405180910390a2505050565b6104a885848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506040516bffffffffffffffffffffffff193360601b166020820152603401915061048c9050565b6040516020818303038152906040528051906020012084610770565b6104f45760405162461bcd60e51b815260206004820152600d60248201527f4e6f742043657274696669656400000000000000000000000000000000000000604482015260640161022e565b84336001600160a01b03167f984431b6157d38eb9ba10ee456157dc48b546e19cae0c989326a4e6772f8a05d8660405161052e9190610d2c565b60405180910390a35050505050565b6000546001600160a01b031633146105975760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161022e565b6001600160a01b0381166106135760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161022e565b61061c816107ed565b50565b600054600160a81b900460ff166106545760005474010000000000000000000000000000000000000000900460ff1615610658565b303b155b6106ca5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161022e565b600054600160a81b900460ff1615801561071f57600080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff1675010100000000000000000000000000000000000000001790555b8151610732906001906020850190610917565b5061073c836107ed565b801561076b57600080547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff1690555b505050565b600084815260026020908152604080832084845290915281205460ff166107d95760405162461bcd60e51b815260206004820152600e60248201527f526f6f74206e6f7420666f756e64000000000000000000000000000000000000604482015260640161022e565b6107e4848385610855565b95945050505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082610862858461086b565b14949350505050565b600081815b845181101561090f57600085828151811061088d5761088d610dd4565b602002602001015190508083116108cf5760408051602081018590529081018290526060016040516020818303038152906040528051906020012092506108fc565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b508061090781610dab565b915050610870565b509392505050565b82805461092390610d70565b90600052602060002090601f016020900481019282610945576000855561098b565b82601f1061095e57805160ff191683800117855561098b565b8280016001018555821561098b579182015b8281111561098b578251825591602001919060010190610970565b5061099792915061099b565b5090565b5b80821115610997576000815560010161099c565b80356001600160a01b03811681146109c757600080fd5b919050565b600082601f8301126109dd57600080fd5b813567ffffffffffffffff8111156109f7576109f7610dea565b610a0a601f8201601f1916602001610d3f565b818152846020838601011115610a1f57600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610a4e57600080fd5b610a57826109b0565b9392505050565b60008060408385031215610a7157600080fd5b610a7a836109b0565b9150602083013567ffffffffffffffff811115610a9657600080fd5b610aa2858286016109cc565b9150509250929050565b600060208284031215610abe57600080fd5b813567ffffffffffffffff811115610ad557600080fd5b610ae1848285016109cc565b949350505050565b600080600060608486031215610afe57600080fd5b833567ffffffffffffffff811115610b1557600080fd5b610b21868287016109cc565b9660208601359650604090950135949350505050565b60008060008060808587031215610b4d57600080fd5b8435935060208086013567ffffffffffffffff80821115610b6d57600080fd5b818801915088601f830112610b8157600080fd5b813581811115610b9357610b93610dea565b8060051b9150610ba4848301610d3f565b8181528481019084860184860187018d1015610bbf57600080fd5b600095505b83861015610be2578035835260019590950194918601918601610bc4565b50989b989a505050506040870135966060013595945050505050565b60008060408385031215610c1157600080fd5b50508035926020909101359150565b600080600080600060808688031215610c3857600080fd5b85359450602086013567ffffffffffffffff80821115610c5757600080fd5b610c6389838a016109cc565b95506040880135915080821115610c7957600080fd5b818801915088601f830112610c8d57600080fd5b813581811115610c9c57600080fd5b8960208260051b8501011115610cb157600080fd5b96999598505060200195606001359392505050565b6000815180845260005b81811015610cec57602081850181015186830182015201610cd0565b81811115610cfe576000602083870101525b50601f01601f19169290920160200192915050565b828152604060208201526000610ae16040830184610cc6565b602081526000610a576020830184610cc6565b604051601f8201601f1916810167ffffffffffffffff81118282101715610d6857610d68610dea565b604052919050565b600181811c90821680610d8457607f821691505b60208210811415610da557634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610dcd57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea164736f6c6343000807000a";

type OpenCredImplConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OpenCredImplConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OpenCredImpl__factory extends ContractFactory {
  constructor(...args: OpenCredImplConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OpenCredImpl> {
    return super.deploy(overrides || {}) as Promise<OpenCredImpl>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OpenCredImpl {
    return super.attach(address) as OpenCredImpl;
  }
  connect(signer: Signer): OpenCredImpl__factory {
    return super.connect(signer) as OpenCredImpl__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OpenCredImplInterface {
    return new utils.Interface(_abi) as OpenCredImplInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OpenCredImpl {
    return new Contract(address, _abi, signerOrProvider) as OpenCredImpl;
  }
}
