/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OpenCredImpl, OpenCredImplInterface } from "../OpenCredImpl";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bootcamp",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "courseId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "courseURI",
        type: "string",
      },
    ],
    name: "CourseCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bootcamp",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "courseId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleProof",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "graduatesURI",
        type: "string",
      },
    ],
    name: "Graduate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bootcamp",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reviewer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reviewURI",
        type: "string",
      },
    ],
    name: "Review",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "courseURI",
        type: "string",
      },
    ],
    name: "addCourse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bootcampURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "courseCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "graduatesURI",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "courseId",
        type: "uint256",
      },
    ],
    name: "graduate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "graduations",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_bootcampURI",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "courseId",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "isCertified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "courseId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reviewURI",
        type: "string",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "review",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610e2b8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80638da5cb5b11610081578063f2fde38b1161005b578063f2fde38b1461019f578063f399e22e146101b2578063ff62b684146101c557600080fd5b80638da5cb5b14610133578063ce7be1121461014e578063eab571961461016157600080fd5b806366055159116100b25780636605515914610101578063715018a6146101185780637fa142a31461012057600080fd5b80632e554076146100ce57806349d5f2ae146100e3575b600080fd5b6100e16100dc366004610aab565b6101d8565b005b6100eb610280565b6040516100f89190610d12565b60405180910390f35b61010a60035481565b6040519081526020016100f8565b6100e161030e565b6100e161012e366004610ae8565b610374565b6000546040516001600160a01b0390911681526020016100f8565b6100e161015c366004610c1f565b610435565b61018f61016f366004610bfd565b600260209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100f8565b6100e16101ad366004610a3b565b61053c565b6100e16101c0366004610a5d565b61061e565b61018f6101d3366004610b36565b61076f565b6000546001600160a01b031633146102375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600380546001019081905560405130917fdfff37b93a59c1210da07fb62043e90ad88a7c2d1d12d53f1632950dfbbcf5b79161027591908590610d44565b60405180910390a250565b6001805461028d90610d8e565b80601f01602080910402602001604051908101604052809291908181526020018280546102b990610d8e565b80156103065780601f106102db57610100808354040283529160200191610306565b820191906000526020600020905b8154815290600101906020018083116102e957829003601f168201915b505050505081565b6000546001600160a01b031633146103685760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161022e565b61037260006107ec565b565b6000546001600160a01b031633146103ce5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161022e565b600081815260026020908152604080832085845290915290819020805460ff191660011790555130907fe8ccf14e0e5d0933c4a730f93f14ee872a8746633ce826da79b002094ce8c7649061042890849086908890610d25565b60405180910390a2505050565b6104ad85848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506040516bffffffffffffffffffffffff193360601b16602082015260340191506104919050565b604051602081830303815290604052805190602001208461076f565b6104f95760405162461bcd60e51b815260206004820152600d60248201527f4e6f742043657274696669656400000000000000000000000000000000000000604482015260640161022e565b604051339030907fd04dc1dba643da3b5fb0fa71c4117eb2fce28d2a32f523b0816c75ba0aaa86399061052d908890610d12565b60405180910390a35050505050565b6000546001600160a01b031633146105965760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161022e565b6001600160a01b0381166106125760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161022e565b61061b816107ec565b50565b600054600160a81b900460ff166106535760005474010000000000000000000000000000000000000000900460ff1615610657565b303b155b6106c95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161022e565b600054600160a81b900460ff1615801561071e57600080547fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff1675010100000000000000000000000000000000000000001790555b8151610731906001906020850190610916565b5061073b836107ec565b801561076a57600080547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff1690555b505050565b600084815260026020908152604080832084845290915281205460ff166107d85760405162461bcd60e51b815260206004820152600e60248201527f526f6f74206e6f7420666f756e64000000000000000000000000000000000000604482015260640161022e565b6107e3848385610854565b95945050505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600082610861858461086a565b14949350505050565b600081815b845181101561090e57600085828151811061088c5761088c610df2565b602002602001015190508083116108ce5760408051602081018590529081018290526060016040516020818303038152906040528051906020012092506108fb565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b508061090681610dc9565b91505061086f565b509392505050565b82805461092290610d8e565b90600052602060002090601f016020900481019282610944576000855561098a565b82601f1061095d57805160ff191683800117855561098a565b8280016001018555821561098a579182015b8281111561098a57825182559160200191906001019061096f565b5061099692915061099a565b5090565b5b80821115610996576000815560010161099b565b80356001600160a01b03811681146109c657600080fd5b919050565b600082601f8301126109dc57600080fd5b813567ffffffffffffffff8111156109f6576109f6610e08565b610a09601f8201601f1916602001610d5d565b818152846020838601011115610a1e57600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610a4d57600080fd5b610a56826109af565b9392505050565b60008060408385031215610a7057600080fd5b610a79836109af565b9150602083013567ffffffffffffffff811115610a9557600080fd5b610aa1858286016109cb565b9150509250929050565b600060208284031215610abd57600080fd5b813567ffffffffffffffff811115610ad457600080fd5b610ae0848285016109cb565b949350505050565b600080600060608486031215610afd57600080fd5b833567ffffffffffffffff811115610b1457600080fd5b610b20868287016109cb565b9660208601359650604090950135949350505050565b60008060008060808587031215610b4c57600080fd5b8435935060208086013567ffffffffffffffff80821115610b6c57600080fd5b818801915088601f830112610b8057600080fd5b813581811115610b9257610b92610e08565b8060051b9150610ba3848301610d5d565b8181528481019084860184860187018d1015610bbe57600080fd5b600095505b83861015610be1578035835260019590950194918601918601610bc3565b50989b989a505050506040870135966060013595945050505050565b60008060408385031215610c1057600080fd5b50508035926020909101359150565b600080600080600060808688031215610c3757600080fd5b85359450602086013567ffffffffffffffff80821115610c5657600080fd5b610c6289838a016109cb565b95506040880135915080821115610c7857600080fd5b818801915088601f830112610c8c57600080fd5b813581811115610c9b57600080fd5b8960208260051b8501011115610cb057600080fd5b96999598505060200195606001359392505050565b6000815180845260005b81811015610ceb57602081850181015186830182015201610ccf565b81811115610cfd576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610a566020830184610cc5565b8381528260208201526060604082015260006107e36060830184610cc5565b828152604060208201526000610ae06040830184610cc5565b604051601f8201601f1916810167ffffffffffffffff81118282101715610d8657610d86610e08565b604052919050565b600181811c90821680610da257607f821691505b60208210811415610dc357634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610deb57634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea164736f6c6343000807000a";

type OpenCredImplConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OpenCredImplConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OpenCredImpl__factory extends ContractFactory {
  constructor(...args: OpenCredImplConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OpenCredImpl> {
    return super.deploy(overrides || {}) as Promise<OpenCredImpl>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OpenCredImpl {
    return super.attach(address) as OpenCredImpl;
  }
  connect(signer: Signer): OpenCredImpl__factory {
    return super.connect(signer) as OpenCredImpl__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OpenCredImplInterface {
    return new utils.Interface(_abi) as OpenCredImplInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OpenCredImpl {
    return new Contract(address, _abi, signerOrProvider) as OpenCredImpl;
  }
}
